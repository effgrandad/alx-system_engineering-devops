#!/usr/bin/env bash
# sets up Nginx server to forward traffic to different website via/redirect_me
# The redirection is configured as a "301 Moved Permanently"
# includes a personalized "Ceci n'est pas une page" 404 page

# establishes the directory /etc/nginx/html, which will functionas Nginx's document root
# opens the /etc/nginx/html directory and creates an empty index.html file
touch /etc/nginx/html/index.html
# employs the echo command to insert "Hello World!" into the index.html file.
/etc/nginx/html/index.htm > echo "Hello World!"
# Sets Nginx to listen on port 80 and serve files from the
/etc/nginx/html directory

printf %s "server {
     listen      80;
     listen      [::]:80 default_server;
     root        /etc/nginx/html;
     index       index.html index.htm;
}
" > /etc/nginx/sites-available/default

# creates an empty file named 404.html inside the /etc/nginx/html directory.
touch /etc/nginx/html/404.html

# Paste a 404 response in the 404.html file
echo "Ceci n'est pas une page" | sudo tee /etc/nginx/html/404.html

# Display script completion message
echo "Nginx installation and configuration completed."

# Create a configuration file for the redirection
echo "server {
    listen      80;
    listen      [::]:80;
    root        /etc/nginx/html;
    index       index.html index.htm;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    location /redirect_me {
        return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
    }

    error_page 404 /404.html;
    location /404 {
      root /etc/nginx/html;
      internal;
    }

}" | sudo tee /etc/nginx/sites-available/default

# Enable the new site configuration
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# Test nginx configuration and reload
sudo nginx -t
sudo service nginx reload

